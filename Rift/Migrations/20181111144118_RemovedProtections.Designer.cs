// <auto-generated />
using Rift.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Rift.Migrations
{
    [DbContext(typeof(RiftContext))]
    [Migration("20181111144118_RemovedProtections")]
    partial class RemovedProtections
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IonicLib.Database.DbUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Attack200times");

                    b.Property<bool>("AttackWise");

                    b.Property<ulong>("AttacksDone");

                    b.Property<ulong>("AttacksReceived");

                    b.Property<ulong>("BotRespectTimestamp");

                    b.Property<bool>("Brag100times");

                    b.Property<ulong>("BragTotal");

                    b.Property<ulong>("CapsuleEarnedTotal");

                    b.Property<ulong>("CapsuleOpenedTotal");

                    b.Property<uint>("Capsules");

                    b.Property<uint>("Chests");

                    b.Property<ulong>("ChestsEarnedTotal");

                    b.Property<ulong>("ChestsOpenedTotal");

                    b.Property<uint>("Coins");

                    b.Property<ulong>("CoinsEarnedTotal");

                    b.Property<ulong>("CoinsSpentTotal");

                    b.Property<ulong>("CreatedAtTimestamp");

                    b.Property<uint>("CustomTickets");

                    b.Property<decimal>("Donate");

                    b.Property<ulong>("DoubleExpTimestamp");

                    b.Property<uint>("Experience");

                    b.Property<bool>("GiftSphere");

                    b.Property<bool>("GiftToBotKeeper");

                    b.Property<bool>("GiftToModerator");

                    b.Property<ulong>("GiftsReceived");

                    b.Property<ulong>("GiftsSent");

                    b.Property<uint>("GiveawayTickets");

                    b.Property<bool>("HasDonatedRole");

                    b.Property<bool>("IsDonater");

                    b.Property<ulong>("LastAttackTimestamp");

                    b.Property<ulong>("LastBragTimestamp");

                    b.Property<ulong>("LastDailyChestTimestamp");

                    b.Property<ulong>("LastGiftTimestamp");

                    b.Property<ulong>("LastLolAccountUpdateTimestamp");

                    b.Property<ulong>("LastStoreTimestamp");

                    b.Property<uint>("Level");

                    b.Property<long>("LolAccountId");

                    b.Property<long>("LolSummonerId");

                    b.Property<string>("LolSummonerName");

                    b.Property<string>("LolSummonerRegion");

                    b.Property<ulong>("MessagesSentTotal");

                    b.Property<bool>("Open100Chests");

                    b.Property<bool>("OpenSphere");

                    b.Property<uint>("PowerupsAttack");

                    b.Property<uint>("PowerupsBotRespect");

                    b.Property<uint>("PowerupsDoubleExp");

                    b.Property<bool>("Purchaise200Items");

                    b.Property<ulong>("PurchasedItemsTotal");

                    b.Property<bool>("Reach10Level");

                    b.Property<bool>("Reach30Level");

                    b.Property<bool>("Send100Gifts");

                    b.Property<ulong>("SphereEarnedTotal");

                    b.Property<ulong>("SphereOpenedTotal");

                    b.Property<uint>("Spheres");

                    b.Property<uint>("Tokens");

                    b.Property<ulong>("TokensEarnedTotal");

                    b.Property<ulong>("TokensSpentTotal");

                    b.Property<bool>("Write1000Mesages");

                    b.Property<bool>("Write100Mesages");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IonicLib.Database.ScheduledEvent", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayId");

                    b.Property<int>("EventId");

                    b.Property<int>("Hour");

                    b.Property<int>("Minute");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
